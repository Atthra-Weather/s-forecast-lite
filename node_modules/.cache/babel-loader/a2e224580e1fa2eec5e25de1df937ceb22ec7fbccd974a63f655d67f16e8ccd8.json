{"ast":null,"code":"var _jsxFileName = \"/Users/junyoungkim/Desktop/s_forecast_pwa_project/src/App.jsx\",\n  _s = $RefreshSig$();\n// App.jsx — S-Forecast ver.3.0-cef (Navier–Riemann–CEF Hybrid Edition)\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const API_KEY = \"8370f7e693e34a79bdd180327252510\";\n  const CITY = {\n    서울: {\n      name_en: \"Seoul\",\n      lat: 37.5665,\n      lon: 126.9780,\n      alt: 20\n    },\n    수원: {\n      name_en: \"Suwon\",\n      lat: 37.2636,\n      lon: 127.0286,\n      alt: 30\n    },\n    용인: {\n      name_en: \"Yongin\",\n      lat: 37.2753,\n      lon: 127.1159,\n      alt: 70\n    },\n    안산: {\n      name_en: \"Ansan\",\n      lat: 37.3219,\n      lon: 126.8309,\n      alt: 15\n    },\n    안양: {\n      name_en: \"Anyang\",\n      lat: 37.3943,\n      lon: 126.9568,\n      alt: 25\n    },\n    강릉: {\n      name_en: \"Gangneung\",\n      lat: 37.7519,\n      lon: 128.8761,\n      alt: 50\n    },\n    부산: {\n      name_en: \"Busan\",\n      lat: 35.1796,\n      lon: 129.0756,\n      alt: 5\n    },\n    오사카: {\n      name_en: \"Osaka\",\n      lat: 34.6937,\n      lon: 135.5023,\n      alt: 10\n    },\n    후쿠오카: {\n      name_en: \"Fukuoka\",\n      lat: 33.5902,\n      lon: 130.4017,\n      alt: 20\n    },\n    유후인: {\n      name_en: \"Yufuin\",\n      lat: 33.2659,\n      lon: 131.3461,\n      alt: 150\n    },\n    나고야: {\n      name_en: \"Nagoya\",\n      lat: 35.1815,\n      lon: 136.9066,\n      alt: 15\n    },\n    마쓰야마: {\n      name_en: \"Matsuyama\",\n      lat: 33.8393,\n      lon: 132.7657,\n      alt: 30\n    }\n  };\n  const [city, setCity] = useState(\"수원\");\n  const [forecast, setForecast] = useState([]);\n  const [hourly, setHourly] = useState([]);\n  const [status, setStatus] = useState(\"Loading…\");\n  const WEEK = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const dayStr = iso => {\n    const d = new Date(iso);\n    return `${d.getMonth() + 1}/${d.getDate()} (${WEEK[d.getDay()]})`;\n  };\n  function refineCondition(text) {\n    const t = (text === null || text === void 0 ? void 0 : text.toLowerCase()) || \"\";\n    if (t.includes(\"sunny\") || t.includes(\"clear\")) return \"맑음\";\n    if (t.includes(\"partly\") || t.includes(\"mostly\")) return \"대체로 맑음\";\n    if (t.includes(\"cloud\")) return \"가끔 구름 많음\";\n    if (t.includes(\"overcast\")) return \"대체로 흐림\";\n    if (t.includes(\"rain\") && t.includes(\"snow\")) return \"비 또는 눈\";\n    if (t.includes(\"rain\") || t.includes(\"drizzle\") || t.includes(\"shower\")) return \"비 또는 소나기\";\n    if (t.includes(\"snow\") || t.includes(\"sleet\")) return \"눈\";\n    if (t.includes(\"fog\") || t.includes(\"mist\") || t.includes(\"haze\")) return \"안개\";\n    return \"기타\";\n  }\n\n  // -----------------------------\n  // 🔹 Nonlinear S (Navier–Riemann Base)\n  // -----------------------------\n  function riemannZetaApprox(s, n = 40) {\n    let sum = 0;\n    for (let k = 1; k <= n; k++) sum += 1 / Math.pow(k, s);\n    return sum;\n  }\n  function computeSPlusRiemann({\n    temp,\n    humidity,\n    wind = 0,\n    cloud = 0\n  }) {\n    const T0 = 20,\n      H0 = 50;\n    const sigmaT = 7,\n      sigmaH = 15;\n    const v_c = 10,\n      rho0 = 1.2,\n      kappa = 0.4;\n    const ST = Math.exp(-((temp - T0) ** 2) / (2 * sigmaT ** 2));\n    const SH = Math.exp(-((humidity - H0) ** 2) / (2 * sigmaH ** 2));\n    const SC = 1 - cloud / 100;\n    const SV = Math.tanh(wind / v_c);\n    const baseS = rho0 * (ST * SH * SC) - kappa * SV;\n    const sigma = 1 + 0.1 * Math.sin(temp / 10) - 0.05 * Math.cos(humidity / 30);\n    const zeta = riemannZetaApprox(sigma);\n    const corr = 1 + 0.02 * Math.tanh(zeta / 20);\n    const S = baseS * corr;\n    return Math.max(0, Math.min(3, S));\n  }\n\n  // -----------------------------\n  // 🔹 CEF Rhythm Correction Layer\n  // -----------------------------\n  function computeSPlusCEF({\n    temp,\n    humidity,\n    wind = 0,\n    cloud = 0\n  }) {\n    const α = 0.8,\n      β = 0.6;\n    const dρ_dt = (humidity - 50) / 100; // existence density gradient\n    const gradΦ = (temp - 20) / 25 + wind / 10 - cloud / 100;\n    const Scef = α * dρ_dt ** 2 + β * gradΦ ** 2;\n    return Math.min(3, Math.max(0, Scef * 1.2));\n  }\n\n  // 🔹 Combined Hybrid (Navier–Riemann + CEF)\n  function computeSCombined(params) {\n    const S_R = computeSPlusRiemann(params);\n    const S_C = computeSPlusCEF(params);\n    const weight = 0.6; // 60% CEF influence\n    return (1 - weight) * S_R + weight * S_C;\n  }\n  function interpretRhythm(S) {\n    if (S < 0.8) return \"안정 — 리듬이 평형을 유지 중\";\n    if (S < 1.2) return \"평형 — 구름 많고 완만한 진동\";\n    if (S < 2.0) return \"불안정 — 대기 교호 상승, 비 가능성↑\";\n    return \"초과활성 — 급격한 리듬 전환, 폭풍·강풍 주의\";\n  }\n\n  // -----------------------------\n  // 🔹 Fetch Weather + Apply Hybrid Model\n  // -----------------------------\n  async function fetchWeather(cityKo) {\n    try {\n      var _data$forecast$foreca, _data$forecast, _forecastDays$flatMap;\n      const {\n        lat,\n        lon\n      } = CITY[cityKo];\n      const url = `https://api.weatherapi.com/v1/forecast.json?key=${API_KEY}&q=${lat},${lon}&days=10&aqi=no&alerts=no`;\n      const res = await fetch(url);\n      if (!res.ok) throw new Error(`API Error ${res.status}`);\n      const data = await res.json();\n      const forecastDays = (_data$forecast$foreca = (_data$forecast = data.forecast) === null || _data$forecast === void 0 ? void 0 : _data$forecast.forecastday) !== null && _data$forecast$foreca !== void 0 ? _data$forecast$foreca : [];\n      const allHours = (_forecastDays$flatMap = forecastDays.flatMap(f => f.hour)) !== null && _forecastDays$flatMap !== void 0 ? _forecastDays$flatMap : [];\n      const nowEpoch = Math.floor(Date.now() / 1000);\n      const next12h = allHours.filter(h => h.time_epoch >= nowEpoch).slice(0, 12).map(h => {\n        const S = computeSCombined({\n          temp: h.temp_c,\n          humidity: h.humidity,\n          wind: h.wind_kph,\n          cloud: h.cloud\n        });\n        return {\n          time: new Date(h.time_epoch * 1000).toLocaleTimeString(\"ko-KR\", {\n            hour: \"2-digit\"\n          }),\n          temp: h.temp_c,\n          humidity: h.humidity,\n          condition: refineCondition(h.condition.text),\n          wind_mps: h.wind_kph / 3.6,\n          S,\n          rhythm: interpretRhythm(S)\n        };\n      });\n      const days = forecastDays.slice(0, 10).map(d => ({\n        date: d.date,\n        maxtemp: d.day.maxtemp_c,\n        mintemp: d.day.mintemp_c,\n        humidity: d.day.avghumidity,\n        condition: refineCondition(d.day.condition.text)\n      }));\n      setHourly(next12h);\n      setForecast(days);\n      setStatus(\"Data updated successfully (CEF Hybrid)\");\n    } catch (e) {\n      console.error(e);\n      setStatus(\"Connection limited — please retry later\");\n    }\n  }\n  useEffect(() => {\n    fetchWeather(city);\n  }, [city]);\n  const today = new Date();\n  const todayStr = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, \"0\")}-${String(today.getDate()).padStart(2, \"0\")}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"S-Forecast ver.3.0-cef\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uB3C4\\uC2DC \\uC120\\uD0DD: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: city,\n        onChange: e => setCity(e.target.value),\n        children: Object.keys(CITY).map(n => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: n\n        }, n, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 39\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"tiny-date\",\n      children: todayStr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hourly\",\n      children: hourly.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tiny\",\n        children: \"Loading data\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this) : hourly.map((h, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hour-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tiny\",\n          children: h.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [h.temp.toFixed(1), \"\\xB0C / \", h.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: h.condition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tiny\",\n          children: [\"\\uD48D\\uC18D \", h.wind_mps.toFixed(1), \" m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tiny\",\n          children: [\"\\uB9AC\\uB4EC: \", h.rhythm]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"forecast\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Condition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"High / Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Humidity (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: forecast.map((d, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: dayStr(d.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.condition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [Math.round(d.maxtemp), \"\\xB0 / \", Math.round(d.mintemp), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Math.round(d.humidity)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Glitch Factory \\u2014 Navier\\u2013Riemann\\u2013CEF Hybrid Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Vx2tusB0Y3v/fsTaQtDn4qKX650=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","API_KEY","CITY","서울","name_en","lat","lon","alt","수원","용인","안산","안양","강릉","부산","오사카","후쿠오카","유후인","나고야","마쓰야마","city","setCity","forecast","setForecast","hourly","setHourly","status","setStatus","WEEK","dayStr","iso","d","Date","getMonth","getDate","getDay","refineCondition","text","t","toLowerCase","includes","riemannZetaApprox","s","n","sum","k","Math","pow","computeSPlusRiemann","temp","humidity","wind","cloud","T0","H0","sigmaT","sigmaH","v_c","rho0","kappa","ST","exp","SH","SC","SV","tanh","baseS","sigma","sin","cos","zeta","corr","S","max","min","computeSPlusCEF","α","β","dρ_dt","gradΦ","Scef","computeSCombined","params","S_R","S_C","weight","interpretRhythm","fetchWeather","cityKo","_data$forecast$foreca","_data$forecast","_forecastDays$flatMap","url","res","fetch","ok","Error","data","json","forecastDays","forecastday","allHours","flatMap","f","hour","nowEpoch","floor","now","next12h","filter","h","time_epoch","slice","map","temp_c","wind_kph","time","toLocaleTimeString","condition","wind_mps","rhythm","days","date","maxtemp","day","maxtemp_c","mintemp","mintemp_c","avghumidity","e","console","error","today","todayStr","getFullYear","String","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","Object","keys","length","i","toFixed","round","_c","$RefreshReg$"],"sources":["/Users/junyoungkim/Desktop/s_forecast_pwa_project/src/App.jsx"],"sourcesContent":["// App.jsx — S-Forecast ver.3.0-cef (Navier–Riemann–CEF Hybrid Edition)\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nexport default function App() {\n  const API_KEY = \"8370f7e693e34a79bdd180327252510\";\n\n  const CITY = {\n    서울:   { name_en: \"Seoul\", lat: 37.5665, lon: 126.9780, alt: 20 },\n    수원:   { name_en: \"Suwon\", lat: 37.2636, lon: 127.0286, alt: 30 },\n    용인:   { name_en: \"Yongin\", lat: 37.2753, lon: 127.1159, alt: 70 },\n    안산:   { name_en: \"Ansan\", lat: 37.3219, lon: 126.8309, alt: 15 },\n    안양:   { name_en: \"Anyang\", lat: 37.3943, lon: 126.9568, alt: 25 },\n    강릉:   { name_en: \"Gangneung\", lat: 37.7519, lon: 128.8761, alt: 50 },\n    부산:   { name_en: \"Busan\", lat: 35.1796, lon: 129.0756, alt: 5 },\n    오사카: { name_en: \"Osaka\", lat: 34.6937, lon: 135.5023, alt: 10 },\n    후쿠오카:{ name_en: \"Fukuoka\", lat: 33.5902, lon: 130.4017, alt: 20 },\n    유후인: { name_en: \"Yufuin\", lat: 33.2659, lon: 131.3461, alt: 150 },\n    나고야: { name_en: \"Nagoya\", lat: 35.1815, lon: 136.9066, alt: 15 },\n    마쓰야마:{ name_en: \"Matsuyama\", lat: 33.8393, lon: 132.7657, alt: 30 },\n  };\n\n  const [city, setCity] = useState(\"수원\");\n  const [forecast, setForecast] = useState([]);\n  const [hourly, setHourly] = useState([]);\n  const [status, setStatus] = useState(\"Loading…\");\n\n  const WEEK = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];\n  const dayStr = (iso) => {\n    const d = new Date(iso);\n    return `${d.getMonth() + 1}/${d.getDate()} (${WEEK[d.getDay()]})`;\n  };\n\n  function refineCondition(text) {\n    const t = text?.toLowerCase() || \"\";\n    if (t.includes(\"sunny\") || t.includes(\"clear\")) return \"맑음\";\n    if (t.includes(\"partly\") || t.includes(\"mostly\")) return \"대체로 맑음\";\n    if (t.includes(\"cloud\")) return \"가끔 구름 많음\";\n    if (t.includes(\"overcast\")) return \"대체로 흐림\";\n    if (t.includes(\"rain\") && t.includes(\"snow\")) return \"비 또는 눈\";\n    if (t.includes(\"rain\") || t.includes(\"drizzle\") || t.includes(\"shower\")) return \"비 또는 소나기\";\n    if (t.includes(\"snow\") || t.includes(\"sleet\")) return \"눈\";\n    if (t.includes(\"fog\") || t.includes(\"mist\") || t.includes(\"haze\")) return \"안개\";\n    return \"기타\";\n  }\n\n  // -----------------------------\n  // 🔹 Nonlinear S (Navier–Riemann Base)\n  // -----------------------------\n  function riemannZetaApprox(s, n = 40) {\n    let sum = 0;\n    for (let k = 1; k <= n; k++) sum += 1 / Math.pow(k, s);\n    return sum;\n  }\n\n  function computeSPlusRiemann({ temp, humidity, wind = 0, cloud = 0 }) {\n    const T0 = 20, H0 = 50;\n    const sigmaT = 7, sigmaH = 15;\n    const v_c = 10, rho0 = 1.2, kappa = 0.4;\n\n    const ST = Math.exp(-((temp - T0) ** 2) / (2 * sigmaT ** 2));\n    const SH = Math.exp(-((humidity - H0) ** 2) / (2 * sigmaH ** 2));\n    const SC = 1 - cloud / 100;\n    const SV = Math.tanh(wind / v_c);\n    const baseS = rho0 * (ST * SH * SC) - kappa * SV;\n\n    const sigma = 1 + 0.1 * Math.sin(temp / 10) - 0.05 * Math.cos(humidity / 30);\n    const zeta = riemannZetaApprox(sigma);\n    const corr = 1 + 0.02 * Math.tanh(zeta / 20);\n    const S = baseS * corr;\n\n    return Math.max(0, Math.min(3, S));\n  }\n\n  // -----------------------------\n  // 🔹 CEF Rhythm Correction Layer\n  // -----------------------------\n  function computeSPlusCEF({ temp, humidity, wind = 0, cloud = 0 }) {\n    const α = 0.8, β = 0.6;\n    const dρ_dt = (humidity - 50) / 100; // existence density gradient\n    const gradΦ = (temp - 20) / 25 + (wind / 10) - (cloud / 100);\n    const Scef = α * dρ_dt ** 2 + β * gradΦ ** 2;\n    return Math.min(3, Math.max(0, Scef * 1.2));\n  }\n\n  // 🔹 Combined Hybrid (Navier–Riemann + CEF)\n  function computeSCombined(params) {\n    const S_R = computeSPlusRiemann(params);\n    const S_C = computeSPlusCEF(params);\n    const weight = 0.6; // 60% CEF influence\n    return (1 - weight) * S_R + weight * S_C;\n  }\n\n  function interpretRhythm(S) {\n    if (S < 0.8) return \"안정 — 리듬이 평형을 유지 중\";\n    if (S < 1.2) return \"평형 — 구름 많고 완만한 진동\";\n    if (S < 2.0) return \"불안정 — 대기 교호 상승, 비 가능성↑\";\n    return \"초과활성 — 급격한 리듬 전환, 폭풍·강풍 주의\";\n  }\n\n  // -----------------------------\n  // 🔹 Fetch Weather + Apply Hybrid Model\n  // -----------------------------\n  async function fetchWeather(cityKo) {\n    try {\n      const { lat, lon } = CITY[cityKo];\n      const url = `https://api.weatherapi.com/v1/forecast.json?key=${API_KEY}&q=${lat},${lon}&days=10&aqi=no&alerts=no`;\n      const res = await fetch(url);\n      if (!res.ok) throw new Error(`API Error ${res.status}`);\n\n      const data = await res.json();\n      const forecastDays = data.forecast?.forecastday ?? [];\n      const allHours = forecastDays.flatMap(f => f.hour) ?? [];\n\n      const nowEpoch = Math.floor(Date.now() / 1000);\n      const next12h = allHours\n        .filter(h => h.time_epoch >= nowEpoch)\n        .slice(0, 12)\n        .map(h => {\n          const S = computeSCombined({\n            temp: h.temp_c,\n            humidity: h.humidity,\n            wind: h.wind_kph,\n            cloud: h.cloud,\n          });\n          return {\n            time: new Date(h.time_epoch * 1000).toLocaleTimeString(\"ko-KR\", { hour: \"2-digit\" }),\n            temp: h.temp_c,\n            humidity: h.humidity,\n            condition: refineCondition(h.condition.text),\n            wind_mps: h.wind_kph / 3.6,\n            S,\n            rhythm: interpretRhythm(S),\n          };\n        });\n\n      const days = forecastDays.slice(0, 10).map(d => ({\n        date: d.date,\n        maxtemp: d.day.maxtemp_c,\n        mintemp: d.day.mintemp_c,\n        humidity: d.day.avghumidity,\n        condition: refineCondition(d.day.condition.text),\n      }));\n\n      setHourly(next12h);\n      setForecast(days);\n      setStatus(\"Data updated successfully (CEF Hybrid)\");\n    } catch (e) {\n      console.error(e);\n      setStatus(\"Connection limited — please retry later\");\n    }\n  }\n\n  useEffect(() => { fetchWeather(city); }, [city]);\n\n  const today = new Date();\n  const todayStr = `${today.getFullYear()}-${String(today.getMonth()+1).padStart(2,\"0\")}-${String(today.getDate()).padStart(2,\"0\")}`;\n\n  return (\n    <div className=\"App\">\n      <h1>S-Forecast ver.3.0-cef</h1>\n\n      <div className=\"selector\">\n        <label>도시 선택: </label>\n        <select value={city} onChange={(e)=>setCity(e.target.value)}>\n          {Object.keys(CITY).map(n => <option key={n}>{n}</option>)}\n        </select>\n      </div>\n\n      <p className=\"tiny-date\">{todayStr}</p>\n\n      <div className=\"hourly\">\n        {hourly.length === 0 ? (\n          <p className=\"tiny\">Loading data…</p>\n        ) : hourly.map((h,i)=>(\n          <div key={i} className=\"hour-box\">\n            <p className=\"tiny\">{h.time}</p>\n            <p>{h.temp.toFixed(1)}°C / {h.humidity}%</p>\n            <p>{h.condition}</p>\n            <p className=\"tiny\">풍속 {h.wind_mps.toFixed(1)} m/s</p>\n            <p className=\"tiny\">리듬: {h.rhythm}</p>\n          </div>\n        ))}\n      </div>\n\n      <table className=\"forecast\">\n        <thead>\n          <tr><th>Date</th><th>Condition</th><th>High / Low</th><th>Humidity (%)</th></tr>\n        </thead>\n        <tbody>\n          {forecast.map((d, i) => (\n            <tr key={i}>\n              <td>{dayStr(d.date)}</td>\n              <td>{d.condition}</td>\n              <td>{Math.round(d.maxtemp)}° / {Math.round(d.mintemp)}°</td>\n              <td>{Math.round(d.humidity)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <p className=\"status\">{status}</p>\n      <footer>\n        <p>Glitch Factory — Navier–Riemann–CEF Hybrid Model</p>\n      </footer>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}